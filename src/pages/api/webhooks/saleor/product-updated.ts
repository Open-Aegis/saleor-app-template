import { NextApiHandler } from "next";
import { processSaleorWebhook } from "@saleor/app-sdk/handlers/next";
import { AppWebhook } from "@saleor/app-sdk/types";
import { gqlAstToString } from "@saleor/app-sdk";
import { gql } from "urql";
import { ExampleProductUpdatedSubscription as SubscriptionDocument } from "../../../../../generated/graphql";
import { saleorApp } from "../../../../../saleor-app";

export const ExampleProductUpdatedSubscription = gql`
  subscription ExampleProductUpdated {
    event {
      ... on ProductUpdated {
        product {
          id
          name
        }
      }
    }
  }
`;

export const ExampleProductUpdatedWebhookManifest = (baseUrl: string): AppWebhook => ({
  name: "Example product updated webhook",
  query: gqlAstToString(ExampleProductUpdatedSubscription),
  targetUrl: `${baseUrl}/api/webhooks/saleor/product-updated`,
  asyncEvents: ["PRODUCT_UPDATED"],
  isActive: true,
});

export const handler: NextApiHandler = async (req, res) => {
  const { error, data } = await processSaleorWebhook<SubscriptionDocument["event"]>({
    req,
    apl: saleorApp.apl,
    allowedEvent: "product_updated",
  });
  if (error || !data) {
    console.error(`Received incorrect webhook request. Validation returned with error: ${error}`);
    res.statusCode = 400;
    res.end();
    return;
  }

  // Now we can process the incoming data
  // Since the subscription is defined as GraphQL query, we can use Document generated by the
  // graphql-code-generator to have code completion for the payload

  // TODO: Is there a better way to narrow down event type?
  // expected payload: { __typename?: 'ProductUpdated', product?: { __typename?: 'Product', id: string, name: string }
  const { product } = data.payload;
  if (product) {
    console.log("New PRODUCT_UPDATED event arrived!");
    console.log(`The product ${product.name} (id: ${product.id}) has been updated`);
  }
  res.statusCode = 200;
  res.end();
};

// Next.js body parser has to be turned off to be able to access the raw body
export const config = {
  api: {
    bodyParser: false,
  },
};

export default handler;
